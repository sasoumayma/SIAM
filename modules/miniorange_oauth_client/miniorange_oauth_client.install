<?php
/**
 * @file
 * Installation file for miniOrange OAuth Client Module.
 */
use Drupal\miniorange_oauth_client\feedback;
/**
 * hook_uninstall not needed.
 * Configure variables are cleared when module is uninstalled.
 **/
 function miniorange_oauth_client_uninstall() {
   if(\Drupal::config('miniorange_oauth_client.settings')->get('miniorange_oauth_client_feedback') == '1')
   {
     global $base_url;
	\Drupal::configFactory()->getEditable('miniorange_oauth_client.settings')->clear('miniorange_oauth_client_feedback')->save();
    feedback::miniorange_oauth_client_feedback();
   }
    \Drupal::configFactory()->getEditable('miniorange_oauth_client.settings')->clear('mo_saml_tourTaken_config_clc')->save();
    \Drupal::configFactory()->getEditable('miniorange_oauth_client.settings')->clear('mo_saml_tourTaken_mapping')->save();
    \Drupal::configFactory()->getEditable('miniorange_oauth_client.settings')->clear('mo_saml_tourTaken_licensing')->save();
    \Drupal::configFactory()->getEditable('miniorange_oauth_client.settings')->clear('miniorange_oauth_client_free_users')->save();
    \Drupal::configFactory()->getEditable('miniorange_oauth_client.settings')->clear('miniorange_oauth_client_attr_list_from_server')->save();
 }


/**
 * Implements hook_install().
 */
function miniorange_oauth_client_install() {
  global $base_url;
  $redirect_url = $base_url .'/mo_login';
  \Drupal::configFactory()->getEditable('miniorange_oauth_client.settings')->set('miniorange_oauth_client_free_users', '0')->save();
  \Drupal::configFactory()->getEditable('miniorange_oauth_client.settings')->set('miniorange_oauth_client_feedback', '1')->save();
  \Drupal::configFactory()->getEditable('miniorange_oauth_client.settings')->set('miniorange_oauth_client_email_attribute', 'NameID')->save();
  \Drupal::configFactory()->getEditable('miniorange_oauth_client.settings')->set('miniorange_oauth_client_username_attribute', 'NameID')->save();
  \Drupal::configFactory()->getEditable('miniorange_oauth_client.settings')->set('miniorange_auth_client_callback_uri', $redirect_url)->save();
}

  /**
  * Implementing hook_schema
  **/

function miniorange_oauth_client_schema() {
  $schema['miniorange_oauth_client_token'] = array(
    'description' => t('User Tokens'),
    'fields' => array(
    'id' => array(
      'type' => 'serial',
      'unsigned' => TRUE,
      'not null' => TRUE,
      'description' => t('S.No.: '),
      ),
    'user_id_val' => array(
      'type' => 'int',
      'unsigned' => TRUE,
      'description' => t('The UserIn of the user.'),
      ),
	  'auth_code' => array(
        'type' => 'varchar',
        'length' => 256,
        'description' => t('The one time authorization code.'),
    ),
    'auth_code_expiry_time' => array(
        'type' => 'int',
        'not null' => FALSE,
        'description' => t('The one time authorization code expiry time.'),
    ),
	  'access_token' => array(
        'description' => 'The access token.',
        'type' => 'varchar',
        'length' => 256,
	  ),
    'access_token_request_time' => array(
        'description' => 'The access token expiry time.',
        'type' => 'int',
        'not null' => FALSE,
	  ),
	),
	'primary key' => array('id'),
  );

  $schema['miniornage_oauth_client_customer'] = array(
  'description' => t('OAuth Client'),
    'fields' => array(
    'id' => array(
      'type' => 'serial',
      'unsigned' => TRUE,
      'not null' => TRUE,
      'description' => t('S.No.: '),
      ),
    'cd_plugin' => array(
      'type' => 'varchar',
      'length' => 256,
      'not null' => TRUE,
      'description' => t('cd_plugin.'),
      ),
    'dno_ssos' => array(
      'type' => 'int',
      'not null' => TRUE,
       'description' => t('dno_ssos'),
    ),
    'tno_ssos' => array(
       'type' => 'int',
       'not null' => TRUE,
       'description' => t('tno_ssos'),
    ),
    'previous_update' => array(
       'type' => 'varchar',
       'length' => 256,
       'not null' => TRUE,
       'description' => t('previous_update'),
    ),
    ),
    'primary key' => array('id'),
  );

  return $schema;
}
